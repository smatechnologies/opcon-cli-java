<?xml version="1.0" encoding="UTF-8"?>

<configuration>
    <property name="logback.logfile.name" value="${logback.logfile.name:-cmdline}" />
    <property name="logback.logfile" value="${logback.logfile:-TRUE}" />
    <property name="logback.pattern.light" value="[%d{HH:mm:ss}] [%-5p] %msg %ex%n" />
    <property name="logback.pattern.full" value="[%d{yy-MM-dd HH:mm:ss.SSS}] [%-5p] (%-27c{0} %3L\\) %msg %ex{full}%n" />

    <property name="logback.path" value="${logback.path:-log}" />

    <property name="logback.level.stdout" value="${logback.level.stdout:-INFO}" />
    <property name="logback.level.file" value="${logback.level.file:-DEBUG}" />
    <property name="logback.level.root" value="${logback.level.root:-${logback.level.file}}" />
    <property name="logback.stdout.pattern" value="${logback.stdout.pattern:-LIGHT}" />
    
    <property name="logback.maxhistory.file" value="${logback.maxhistory.file:-0}" />
    <property name="logback.maxsize.file" value="${logback.maxsize.file:-100MB}" />

    <!-- Console appender setup -->

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>${logback.level.stdout}</level>
        </filter>
        
        <!-- Do not display config-magic messages in console log -->
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
          <evaluator>
            <expression>return logger.equals("org.skife.config.ConfigurationObjectFactory");</expression>
          </evaluator>
          <onMatch>DENY</onMatch>
        </filter>
        
        <encoder>
            <if condition='property("logback.stdout.pattern").contains("LIGHT")'>
                <then>
                    <pattern>${logback.pattern.light}</pattern>
                </then>
                <else>
                    <pattern>${logback.pattern.full}</pattern>
                </else>
            </if>
        </encoder>
    </appender>

    <!-- Log appender setup -->

    <if condition='property("logback.logfile").contains("TRUE")'>
        <then>
		    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <prudent>true</prudent>
		        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
		            <fileNamePattern>${logback.path}/%d{yyyy-MM, aux}/${logback.logfile.name}_%d{yyyy-MM-dd}.%i.log</fileNamePattern>
		            <maxFileSize>${logback.maxsize.file}</maxFileSize>
		            <maxHistory>${logback.maxhistory.file}</maxHistory>
		            <cleanHistoryOnStart>true</cleanHistoryOnStart>
		        </rollingPolicy>
		
		        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
		            <level>${logback.level.file}</level>
		        </filter>
		
		        <encoder>
		            <pattern>${logback.pattern.full}</pattern>
		        </encoder>
		    </appender>
		</then>
    </if>

    <root level="${logback.level.root}">
        <appender-ref ref="STDOUT" />
        <if condition='property("logback.logfile").contains("TRUE")'>
            <then>
                <appender-ref ref="FILE" />
            </then>
        </if>
    </root>
</configuration>
